version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ppe_postgres
    environment:
      POSTGRES_USER: ppe_user
      POSTGRES_PASSWORD: ppe_password
      POSTGRES_DB: ppe_detection
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ppe_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ppe_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ppe_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ppe_backend
    environment:
      - DATABASE_URL=postgresql://ppe_user:ppe_password@postgres:5432/ppe_detection
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - MODEL_PATH=/app/ml_models/weights/yolov8n.pt
      - CONFIDENCE_THRESHOLD=0.5
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./ml_models:/app/ml_models
      - uploaded_images:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - ppe_network
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ppe_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ppe_network
    restart: unless-stopped

  # ML Model Service (Optional - for heavy processing)
  ml_service:
    build:
      context: ./backend
      dockerfile: Dockerfile.ml
    container_name: ppe_ml
    environment:
      - REDIS_URL=redis://redis:6379
      - MODEL_PATH=/app/ml_models/weights/yolov8n.pt
    volumes:
      - ./ml_models:/app/ml_models
      - uploaded_images:/app/uploads
    depends_on:
      - redis
    networks:
      - ppe_network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  postgres_data:
  redis_data:
  uploaded_images:

networks:
  ppe_network:
    driver: bridge